name: Static Analysis

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  phpstan:
    name: PHPStan - PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1', '8.2', '8.3', '8.4' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, xml, ctype, iconv, intl, curl
          coverage: none
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-phpstan-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-phpstan-${{ matrix.php }}-

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon.dist --no-progress --error-format=github --memory-limit=512M

      - name: Report success
        if: success()
        run: echo "PHPStan analysis passed on PHP ${{ matrix.php }} (Level Max)"
  
  code-style:
    name: Code Style Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, curl
          coverage: none
          tools: composer:v2, cs2pr

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-cs-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-cs-

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress

      - name: Check code style
        run: vendor/bin/php-cs-fixer fix --dry-run --diff --allow-risky=yes

      - name: Report success
        if: success()
        run: echo "Code style check passed"
  
  composer-validate:
    name: Validate composer.json
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: none
          tools: composer:v2

      - name: Validate composer.json
        run: composer validate --strict --no-check-lock

      - name: Report success
        if: success()
        run: echo "composer.json is valid"

