name: Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  tests:
    name: PHP ${{ matrix.php }} - Symfony ${{ matrix.symfony }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1', '8.2', '8.3', '8.4' ]
        symfony: [ '6.4.*', '7.0.*', '7.1.*', '7.2.*', '7.3.*', '7.4.*', '8.0.*' ]
        exclude:
          # Symfony 7.x requires PHP 8.2+
          - php: '8.1'
            symfony: '7.0.*'
          - php: '8.1'
            symfony: '7.1.*'
          - php: '8.1'
            symfony: '7.2.*'
          - php: '8.1'
            symfony: '7.3.*'
          - php: '8.1'
            symfony: '7.4.*'
          # Symfony 8.0 requires PHP 8.4+
          - php: '8.1'
            symfony: '8.0.*'
          - php: '8.2'
            symfony: '8.0.*'
          - php: '8.3'
            symfony: '8.0.*'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, xml, ctype, iconv, intl, curl
          coverage: none
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer require "symfony/framework-bundle:${{ matrix.symfony }}" --no-interaction --no-update
          composer update --prefer-dist --no-interaction --no-progress

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --testdox

      - name: Report success
        if: success()
        run: echo "All tests passed for PHP ${{ matrix.php }} with Symfony ${{ matrix.symfony }}"
  
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, curl
          coverage: xdebug
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-coverage-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-coverage-

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress

      - name: Run tests with coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-text

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true

      - name: Report success
        if: success()
        run: echo "Code coverage analysis completed"

